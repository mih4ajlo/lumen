///mora da se cuva sadrzaj prozorcica negde u bazi
///svaki put kad se doda tag, ubaciti i prazan a tag sa anchorom
///dodati span

tinymce.PluginManager.add('meta', function(editor, url) {
    // Add a button that opens a window
    editor.addButton('meta', {
        text: 'Meta',
        icon: false,
        onclick: function() {
            // Open window
            var trenutnaVrednost = editor.selection.getSelectedBlocks()[0].getAttribute("akter"  ) || '';

            editor.windowManager.open({
                title: 'Meta podaci',
                body: [
                    {type: 'checkbox', name: 'skupstina', label: 'Skupstina','value':'skupstina'},
                    {type: 'checkbox', name: 'vlada', label: 'Vlada','value':'vlada'},
                    {type: 'checkbox', name: 'ministarstvo', label: 'Ministarstvo','value':'ministarstvo'},
                    {type: 'checkbox', name: 'ostali', label: 'Organi i organizacije','value':'ostali'},
                    {type: 'checkbox', name: 'javne', label: 'Javne institucije','value':'javne'},
                    {type: 'textbox', name: 'minTagovi', label: 'Tagovi ministarstvo','value': ''},
                    {type: 'textbox', name: 'minNaziv', label: 'Naziv ministarstva','value': ''},
                    {type: 'textbox', name: 'ostaliTagovi', label: 'Tagovi organa','value': ''},
                    {type: 'textbox', name: 'ostaliNaziv', label: 'Naziv organa','value': ''},
                    {type: 'textbox', name: 'javneNaziv', label: 'Naziv javne sluzbe','value': ''},
                    {type: 'textbox', name: 'javneTagovi', label: 'Tagovi javne sluzbe','value': ''}

                ],
                onsubmit: function(e) {
                    //var selArrBlock = editor.selection.getSelectedBlocks();
                    var selectedEl = editor.selection.getContent();

                    //var selEl = selArrBlock[0];

                    var akteri ='';
                    var ostali_atrib = '';

                    var atributi = Object.keys(e.data);
                    for (var i = 0; i < atributi.length; i++) {
                        var temp_el = e.data[ atributi[i] ]; 
                        if(temp_el ==true){ akteri += atributi[i] + ","; }
                        else if(temp_el.length > 0 && temp_el!=undefined ){
                            //selEl.setAttribute(atributi[i], temp_el );
                            ostali_atrib+=" " + atributi[i] +'="'+temp_el+'" ';
                        }
                    }

                    if(akteri!='')
                        akteri =  akteri.substring(0,akteri.length-1) ;

                    editor.selection.setContent('<span '+ostali_atrib+' akter="' + akteri+'" ><a href="#tempAnch"></a>' + selectedEl + '</span>');
                    /*provera koje polje je setovano*/
                    
                    //applyChange(selEl, e.data.nameVal);
                }
            });
        }
    });

    // Adds a menu item to the tools menu
    editor.addMenuItem('meta', {
        text: 'Meta',
        context: 'tools',
        onclick: function() {
            // Open window with a specific url
            editor.windowManager.open({
                title: 'Meta podaci',
                url: 'http://www.tinymce.com',
                width: 800,
                height: 600,
                buttons: [{
                    text: 'Close',
                    onclick: 'close'
                }]
            });
        }
    });


    function applyChange( selectedElement , value) {
        editor.undoManager.transact(function() {
            editor.focus();
            selectedElement.setAttribute("akter", value );
            //tinyMCE.activeEditor.dom.setAttrib(selectedElement, 'keyword', 'vrednost')
           // editor.formatter.apply(change, {value: value});
            editor.nodeChanged();
        });
    }

    function removeChange(change) {
        editor.undoManager.transact(function() {
            editor.focus();
            editor.formatter.remove(change, {value: null}, null, true);
            editor.nodeChanged();
        });
    }
});